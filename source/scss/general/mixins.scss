@mixin retina {
  @media (min-resolution: $retina-dpi), (min-resolution: $retina-dppx) {
    @content;
  }
}

@mixin container {
  margin: 0 auto;
  padding: 0 4rem;
  width: 100%;

  @media (min-width: $stop-scaling) {
    padding: 0 40px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    padding: 0 1rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    padding: 0 1rem;
  }
}

@mixin list-reset {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin btn-reset {
  padding: 0;
  margin: 0;
  background: none;
  border: none;
  cursor: pointer;
  outline: none;

  &:focus {
    outline: none;
  }
}

@mixin hover {
  &:hover {
    opacity: 0.8;
  }

  &:focus {
    outline: none;
    opacity: 0.7;
  }
}

@mixin center($transformProps:null) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) $transformProps;
}


@mixin fadeInTransitionInit($direction: "up", $duration: 0.4s, $timing-function: ease, $distance: 20%) {
  opacity: 0;
  transition: opacity $duration $timing-function, transform $duration $timing-function;
  will-change: transform, opacity;

  @if $direction == up {
    transform: translateY($distance);
  }

  @else if $direction == down {
    transform: translateY(-$distance);
  }

  @else if $direction == right {
    transform: translateX(-$distance);
  }

  @else if $direction == left {
    transform: translateX($distance);
  }
}

@mixin fadeInTransitionActive {
  opacity: 1;
  transform: translate(0);
}

@mixin fade-animation-mixin($name, $from, $to) {
  @keyframes #{$name} {
    0% {
      transform: $from;
      opacity: 0;
    }

    100% {
      transform: $to;
      opacity: 1;
    }
  }
}
